apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-master
  namespace: production
  labels:
    app.kubernetes.io/name: redis
    helm.sh/chart: redis-15.6.3
    app.kubernetes.io/instance: redis
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: master
spec:
  updateStrategy:
    rollingUpdate:
      # type: RollingUpdate
      partition: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/instance: redis
      app.kubernetes.io/component: master
  replicas: 2
  serviceName: redis-headless
  podManagementPolicy: Parallel
  template:
    metadata:
      labels: 
        app.kubernetes.io/name: redis
        helm.sh/chart: redis-15.6.3
        app.kubernetes.io/instance: redis
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: master
      annotations:
        checksum/configmap:
        checksum/health:
        checksum/scripts:
        checksum/secret:
    spec:
      hostNetwork: false
      enableServiceLinks: false
      serviceAccountName: redis
      affinity:
        podAffinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: redis
                    app.kubernetes.io/instance: redis
                    app.kubernetes.io/component: master
                # namespace: production
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
      # topologySpreadConstraint: 30
      containers:
        - name: redis
          image: docker.io/bitnami/redis:6.2.6-debian-10-r53
          imagePullPolicy: IfNotPresent
          securityContext:
            # enabled: true
            # fsGroup: 2000
            runAsUser: 0
          command:
            - /bin/bash
          args:
            - -c
            - /opt/bitnami/scripts/start-scripts/start-master.sh
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_TLS_ENABLED
              value: "no"
            - name: REDIS_PORT
              value: "6379"
          ports:
            - name: redis
              containerPort: 6379
          livenessProbe:
            # enabled: true
            initialDelaySeconds: 20
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 6
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
          readinessProbe:
            # enabled: true
            initialDelaySeconds: 20 
            periodSeconds: 5
            # One second longer than command timeout should prevent generation of zombie processes.
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
            exec:
              command:
                - sh
                - -c
                - /scripts/ping_readiness_local.sh 1
          startupProbe:
            # enabled: false
            initialDelaySeconds: 300
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
          # limits: {}
          # requests: {}
          volumeMounts:
            - name: start-scripts
              mountPath: /opt/bitnami/scripts/start-scripts
            - name: health
              mountPath: /health
            - name: redis-data
              mountPath: /data
              subPath:
            - name: config
              mountPath: /opt/bitnami/redis/mounted-etc
            - name: redis-tmp-conf
              mountPath: /opt/bitnami/redis/etc/
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: start-scripts
          configMap:
            name: redis-scripts
            defaultMode: 0755
        - name: health
          configMap:
            name: redis-health
            defaultMode: 0755
        - name: config
          configMap:
            name: redis-configuration
        - name: redis-tmp-conf
          emptyDir: {}
        - name: tmp
          emptyDir: {}
      initContainers:
      - command:
        - /bin/chown
        - -R
        - 1001:1001
        - /bitnami/redis/data
        image: docker.io/bitnami/minideb:buster
        imagePullPolicy: Always
        name: volume-permissions
        resources: {}
        securityContext:
          runAsUser: 0
        # terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: 
        volumeMounts:
        - mountPath: /bitnami/redis/data
          name: redis-data
          # terminationMessagePath: /dev/termination-log
          #terminationMessagePolicy: File
          # selector:
          # matchLabels:
            # app: redis
      restartPolicy: Always